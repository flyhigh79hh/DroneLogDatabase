services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dronelogger
      - POSTGRES_USER=dronelogger
      - POSTGRES_PASSWORD=dronelogger
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dronelogger -d dronelogger"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./DroneLogImport:/app/DroneLogImport
      - ./backend/csv_logs:/app/csv_logs
      - uploads_data:/app/uploads/locations
      - drone_uploads_data:/app/uploads/drones
    environment:
      - DATABASE_URL=postgresql+psycopg2://dronelogger:dronelogger@db:5432/dronelogger
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  uploads_data:
  drone_uploads_data:
